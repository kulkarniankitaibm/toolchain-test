---
stages:
- name: Build server and worker
  inputs:
  - service: ${SAMPLE_REPO}
    type: git
    branch: ibm-devops
    dir_name: null
  properties:
  - name: SLACK_WEBHOOK_PATH
    value: ${SLACK_WEBHOOK_PATH}
    type: text
  jobs:
  - name: Build
    type: builder
    artifact_dir: ''
    build_type: shell
    script: |
      #!/bin/bash
      # your script here
      echo "commit=${GIT_COMMIT}" >> ./commit.properties
      echo "git_url=${GIT_URL}" >> ./commit.properties
- name: Test server
  inputs:
  - type: job
    stage: Build server and worker
    job: Build
    dir_name: null
  properties:
  - name: SLACK_WEBHOOK_PATH
    value: ${SLACK_WEBHOOK_PATH}
    type: text
  - name: SLACK_WEBHOOK_URL
    value: ${SLACK_WEBHOOK_URL}
    type: text
  - name: SLACK_CHANNEL
    value: ${SLACK_CHANNEL}
    type: text
  jobs:
  - name: Tests
    type: deployer
    target:
      region_id: ${PROD_REGION_ID}
      organization: ${PROD_ORG_NAME}
      space: ${PROD_SPACE_NAME}
      application: ${CF_APP_NAME1}
    script: |
      #!/bin/bash

      # Prepare testing environment
      export TESTING_ENV=testing

      # Install the dependencies
      export PATH=/opt/IBM/node-v6.7.0/bin:$PATH
      npm install

      # Get VCAP env setup
      node scripts/env.js

      # Run the tests
      npm test
  - name: Slack
    type: deployer
    target:
      region_id: ${PROD_REGION_ID}
      organization: ${PROD_ORG_NAME}
      space: ${PROD_SPACE_NAME}
      application: ${CF_APP_NAME1}
    artifact_dir: ''
    script: |
      #!/bin/bash
      bash scripts/slack-webhook.sh ${SLACK_WEBHOOK_URL} ${SLACK_CHANNEL} test-stage ${CF_APP} tests for build ${BUILD_NUMBER} deployed to org ${CF_ORG} space ${CF_SPACE} - Passed
- name: Deploy server
  inputs:
  - type: job
    stage: Build server and worker
    job: Build
    dir_name: null
  properties:
  - name: ICON_DOMAIN
    type: text
    value: ${ICON_DOMAIN}
  - name: BLUE_GREEN
    type: text_area
    value: ${DEPLOY_SCRIPT}
  - name: SLACK_WEBHOOK_PATH
    value: ${SLACK_WEBHOOK_PATH}
    type: text
  - name: SLACK_WEBHOOK_URL
    value: ${SLACK_WEBHOOK_URL}
    type: text
  - name: SLACK_CHANNEL
    value: ${SLACK_CHANNEL}
    type: text
  jobs:
  - name: Deploy server
    type: deployer
    target:
      region_id: ${PROD_REGION_ID}
      organization: ${PROD_ORG_NAME}
      space: ${PROD_SPACE_NAME}
      application: ${CF_APP_NAME1}
    script: |-
      #!/bin/bash
      
      echo "${BLUE_GREEN}" > blue_green.sh
      chmod +x blue_green.sh
      ./blue_green.sh -d ${ICON_DOMAIN} -n ${CF_APP} -f bluemix/dev-main-manifest.yml
  - name: Deploy worker
    type: deployer
    target:
      region_id: ${PROD_REGION_ID}
      organization: ${PROD_ORG_NAME}
      space: ${PROD_SPACE_NAME}
      application: ${CF_APP_NAME2}
    script: |-
      #!/bin/bash
      cf push ${CF_APP} -f bluemix/dev-worker-manifest.yml
  - name: Slack
    type: deployer
    target:
      region_id: ${PROD_REGION_ID}
      organization: ${PROD_ORG_NAME}
      space: ${PROD_SPACE_NAME}
      application: ${CF_APP_NAME1}
    artifact_dir: ''
    script: |-
      #!/bin/bash
      bash scripts/slack-webhook.sh ${SLACK_WEBHOOK_URL} ${SLACK_CHANNEL} deploy-stage ${CF_APP} for build ${BUILD_NUMBER} is successfully deployed to org ${CF_ORG} space ${CF_SPACE}
- name: Tagging
  inputs:
  - type: job
    stage: Build server and worker
    job: Build
    dir_name: null
  triggers:
  - type: stage
  properties:
  - name: GIT_USER
    type: secure
  - name: GIT_PASS
    type: secure
  jobs:
  - name: Build
    type: builder
    artifact_dir: ''
    build_type: shell
    script: "#!/bin/bash\n# your script here\nls\necho  \"get commit number\" \nCOMMIT_NUMBER=`bash\
      \ scripts/read_properties.sh commit.properties commit`\nGITURL=`bash scripts/read_properties.sh\
      \ commit.properties git_url`\n\nURL=`awk -F// '{ print $2}' <<<\"${GITURL}\"\
      `\n\necho \"clone repo\"\ngit clone https://$GIT_USER:$GIT_PASS@$URL\ncd icon-r2-backend\n\
      \necho \"check out $COMMIT_NUMBER\"\ngit checkout ${COMMIT_NUMBER}\n\n\nTAG=\"\
      build-${BUILD_NUMBER}-$(date +%Y-%m-%d)\"\necho \"Creating tag: $TAG\"\ngit\
      \ tag $TAG\n\n#git push --tags\n\n"
hooks:
- enabled: true
  label: null
  ssl_enabled: false
  url: https://devops-api.ng.bluemix.net/v1/messaging/webhook/publish
